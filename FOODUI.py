# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'FOODUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless5 you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QLabel
from keras.models import model_from_json
import numpy as np
import tensorflow as tf
from keras.preprocessing import image
import pandas as pd
import cv2
import os
from time import sleep



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(764, 510)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(60, 410, 131, 16))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.PRICE = QtWidgets.QLabel(self.centralwidget)
        self.PRICE.setGeometry(QtCore.QRect(220, 410, 131, 31))
        self.PRICE.setFrameShape(QtWidgets.QFrame.Box)
        self.PRICE.setText("")
        self.PRICE.setObjectName("PRICE")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(60, 320, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.NUTRITION = QtWidgets.QLabel(self.centralwidget)
        self.NUTRITION.setGeometry(QtCore.QRect(220, 360, 131, 31))
        self.NUTRITION.setFrameShape(QtWidgets.QFrame.Box)
        self.NUTRITION.setText("")
        self.NUTRITION.setObjectName("NUTRITION")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(420, 170, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.SUBMIT = QtWidgets.QPushButton(self.centralwidget)
        self.SUBMIT.setGeometry(QtCore.QRect(530, 230, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.SUBMIT.setFont(font)
        self.SUBMIT.setObjectName("SUBMIT")
        self.IMAGESHOW = QtWidgets.QLabel(self.centralwidget)
        self.IMAGESHOW.setGeometry(QtCore.QRect(50, 60, 281, 181))
        self.IMAGESHOW.setMouseTracking(False)
        self.IMAGESHOW.setFrameShape(QtWidgets.QFrame.Box)
        self.IMAGESHOW.setText("")
        self.IMAGESHOW.setObjectName("IMAGESHOW")
        self.BROWSEIMAGE = QtWidgets.QPushButton(self.centralwidget)
        self.BROWSEIMAGE.setGeometry(QtCore.QRect(50, 260, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.BROWSEIMAGE.setFont(font)
        self.BROWSEIMAGE.setObjectName("BROWSEIMAGE")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(60, 360, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.CLASSIFY = QtWidgets.QPushButton(self.centralwidget)
        self.CLASSIFY.setGeometry(QtCore.QRect(220, 260, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.CLASSIFY.setFont(font)
        self.CLASSIFY.setObjectName("CLASSIFY")
        self.PREDICTION = QtWidgets.QLabel(self.centralwidget)
        self.PREDICTION.setGeometry(QtCore.QRect(220, 310, 131, 31))
        self.PREDICTION.setFrameShape(QtWidgets.QFrame.Box)
        self.PREDICTION.setText("")
        self.PREDICTION.setObjectName("PREDICTION")

        self.INPUT = QtWidgets.QLineEdit(self.centralwidget)
        self.INPUT.setGeometry(QtCore.QRect(530, 170, 131, 31))
        self.INPUT.setText("")

        self.INPUT.setObjectName("INPUT")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(410, 300, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.SUGGESTION = QtWidgets.QLabel(self.centralwidget)
        self.SUGGESTION.setGeometry(QtCore.QRect(520, 290, 181, 141))
        self.SUGGESTION.setFrameShape(QtWidgets.QFrame.Box)
        self.SUGGESTION.setText("")
        self.SUGGESTION.setObjectName("SUGGESTION")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 764, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.BROWSEIMAGE.clicked.connect(self.loadImage)
        self.CLASSIFY.clicked.connect(self.classifyFunction)
        
        self.SUBMIT.clicked.connect(self.on_click)
    def loadImage(self):
        fileName, _ = QtWidgets.QFileDialog.getOpenFileName(None, "Select Image", "", "Image Files (*.png *.jpg *jpeg *.bmp);;All Files (*)") # Ask for file
        if fileName: # If the user gives a file
            print(fileName)
            self.file=fileName
            pixmap = QtGui.QPixmap(fileName) # Setup pixmap with the provided image
            pixmap = pixmap.scaled(self.IMAGESHOW.width(), self.IMAGESHOW.height(), QtCore.Qt.KeepAspectRatio) # Scale pixmap
            self.IMAGESHOW.setPixmap(pixmap) # Set the pixmap onto the label
            self.IMAGESHOW.setAlignment(QtCore.Qt.AlignCenter) # Align the label to center
    def classifyFunction(self):
        
        json_file = open('model1.json', 'r')
        loaded_model_json = json_file.read()
        json_file.close()
        model = model_from_json(loaded_model_json)
        model.load_weights("model1.h5")
        print("Loaded model from disk")
        path2=self.file
        test_image = image.load_img(path2, target_size = (128, 128))
        test_image = image.img_to_array(test_image)
        test_image = np.expand_dims(test_image, axis=0)
        result = model.predict(test_image)
        #print(result)
        a=np.round(result[0][0])
        b=np.round(result[0][1])
        c=np.round(result[0][2])
        d=np.round(result[0][3])
        e=np.round(result[0][4])
        f=np.round(result[0][5])
        g=np.round(result[0][6])
        h=np.round(result[0][7])
        print(a)
        print(b)
        print(c)
        print(d)
        print(e)
        print(f)
        print(g)
        print(h)
        if a  == 1:
            prediction = 'burger'
            label=prediction
            self.PREDICTION.setText(label)
            nutritionvalue = '271'
            label_2 = nutritionvalue
            self.NUTRITION.setText(label_2)
            price = '260'
            label_3 = price
            self.PRICE.setText(label_3)
        elif b  == 1:
            prediction = 'chicken briyani'
            label=prediction
            self.PREDICTION.setText(label)
            nutritionvalue = '400'
            label_2 = nutritionvalue
            self.NUTRITION.setText(label_2)
            price = '150'
            label_3 = price
            self.PRICE.setText(label_3)
        elif c  == 1:
            prediction = 'dosa'
            label=prediction
            self.PREDICTION.setText(label)
            nutritionvalue = '3.9'
            label_2 = nutritionvalue
            self.NUTRITION.setText(label_2)
            price = '50'
            label_3 = price
            self.PRICE.setText(label_3)
        elif d  == 1:
            prediction = 'idly'
            label=prediction
            self.PREDICTION.setText(label)
            nutritionvalue = '40'
            label_2 = nutritionvalue
            self.NUTRITION.setText(label_2)
            price = '40'
            label_3 = price
            self.PRICE.setText(label_3)
        elif e == 1:
            prediction = 'pizza'
            label=prediction
            self.PREDICTION.setText(label)
            nutritionvalue = '380'
            label_2 = nutritionvalue
            self.NUTRITION.setText(label_2)
            price = '189'
            label_3 = price
            self.PRICE.setText(label_3)
        elif f == 1:
            prediction = 'pongal'
            label=prediction
            self.PREDICTION.setText(label)
            nutritionvalue = '212 '
            label_2 = nutritionvalue
            self.NUTRITION.setText(label_2)
            price = '50'
            label_3 = price
            self.PRICE.setText(label_3)
        elif g == 1:
            prediction = 'poori'
            label=prediction
            self.PREDICTION.setText(label)
            nutritionvalue = '265 '
            label_2 = nutritionvalue
            self.NUTRITION.setText(label_2)
            price = '40'
            label_3 = price
            self.PRICE.setText(label_3)
        elif h  == 1:
            prediction = 'white rice'
            label=prediction
            self.PREDICTION.setText(label)
            nutritionvalue = '123'
            label_2 = nutritionvalue
            self.NUTRITION.setText(label_2)
            price = '70'
            label_3 = price
            self.PRICE.setText(label_3)



            
    
            
        
    def on_click(self):
        LoginName = self.INPUT.text()    
        if (LoginName == 'diabetics') or (LoginName == 'cholestrol') or (LoginName == 'heart attack') or (LoginName == 'sugar') or (LoginName == 'Bloodpressure'):
            c = "this food is not good for your health"
            label_5 = c
            self.SUGGESTION.setText(label_5)
        else:
            d = 'you can eat'
            label_5 = d
            self.SUGGESTION.setText(label_5)
        
    
        
        
            
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_3.setText(_translate("MainWindow", "PRICE"))
        self.label.setText(_translate("MainWindow", "PREDICTED OUTPUT"))
        self.label_4.setText(_translate("MainWindow", "USER INPUT"))
        self.SUBMIT.setText(_translate("MainWindow", "SUBMIT"))
        self.BROWSEIMAGE.setText(_translate("MainWindow", "BROWSE IMAGE"))
        self.label_2.setText(_translate("MainWindow", "NUTRITION VALUE"))
        self.CLASSIFY.setText(_translate("MainWindow", "CLASSIFY"))
        self.label_5.setText(_translate("MainWindow", "SUGGESTION"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
